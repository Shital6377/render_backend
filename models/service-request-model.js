"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = require("mongoose");
const schema = new mongoose_1.Schema({
    user_id: { type: mongoose_1.Schema.Types.ObjectId },
    service_type_id: { type: mongoose_1.Schema.Types.ObjectId },
    assets_id: { type: mongoose_1.Schema.Types.ObjectId },
    dispute_id: { type: mongoose_1.Schema.Types.ObjectId },
    complishment_report: { type: mongoose_1.Schema.Types.ObjectId },
    title: { type: String },
    slug: { type: String },
    location: { type: String },
    detail: { type: String },
    contact_no: { type: String },
    priority: { type: mongoose_1.Schema.Types.ObjectId },
    type: { type: String },
    request_id: { type: String },
    schedule_date: { type: String },
    status: { type: String },
    // pending = 1,
    // awaiting = 2,
    // proccess = 3,
    // closed = 4,
    // completed = 5,
    // disputed = 6,
    // expride = 7,
    // awarded = 8,
    // cancelled = 9,
    // close by admin = 10,
    close_reason: { type: mongoose_1.Schema.Types.ObjectId },
    close_note: { type: String },
    close_sr_date: { type: Date },
    upload_signature: { type: String },
    is_admin_connect: { type: String, default: '0' },
    admin_comment: { type: String, default: '' },
    accept_bid_note: { type: String },
    is_deleted: { type: Boolean, default: false },
    is_expired: { type: Boolean, default: false },
    selected_bid_id: { type: mongoose_1.Schema.Types.ObjectId },
    complishment_report_date: { type: Date },
    is_active: { type: Boolean, default: true },
    is_payment_done: { type: Boolean, default: false },
    is_review_by_sp: { type: Boolean, default: false },
    posted_date: { type: Date },
    awarded_date: { type: String, default: 'N/A' },
}, {
    timestamps: true,
});
const ServiceReqModel = (0, mongoose_1.model)("service_requests", schema);
exports.default = ServiceReqModel;
